import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.*;

public class DetermineForm extends JFrame {
    private JTextField paymentIdField, investigatorIdField;
    private JButton saveButton, exitButton;
    private JTable determineTable;
    private DefaultTableModel tableModel;

    public DetermineForm() {
        setTitle("Determine Records");
        setSize(800, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // === Input Panel ===
        JPanel inputPanel = new JPanel(new GridLayout(5, 2));
        paymentIdField = new JTextField();
        investigatorIdField = new JTextField();
        saveButton = new JButton("Save Determine");
        exitButton = new JButton("Exit");

        inputPanel.add(new JLabel("Payment ID:"));
        inputPanel.add(paymentIdField);
        inputPanel.add(new JLabel("Investigator ID:"));
        inputPanel.add(investigatorIdField);
        inputPanel.add(saveButton);
        inputPanel.add(exitButton);

        // === Table Panel ===
        String[] columns = {"Payment ID", "Investigator ID"};
        tableModel = new DefaultTableModel(columns, 0);
        determineTable = new JTable(tableModel);
        JScrollPane tableScrollPane = new JScrollPane(determineTable);

        // === Layout ===
        setLayout(new BorderLayout());
        add(inputPanel, BorderLayout.WEST);
        add(tableScrollPane, BorderLayout.CENTER);

        // === Actions ===
        saveButton.addActionListener(e -> {
            try {
                int paymentId = Integer.parseInt(paymentIdField.getText().trim());
                String investigatorId = investigatorIdField.getText().trim();

                Determine determine = new Determine(paymentId, investigatorId);
                boolean success = determine.saveToDatabase();

                if (success) {
                    JOptionPane.showMessageDialog(this, "Determine record saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    loadDetermineData(); // Refresh the table
                } else {
                    JOptionPane.showMessageDialog(this, "Error saving determine record.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Invalid input: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        exitButton.addActionListener(e -> System.exit(0));

        // === Load initial data ===
        loadDetermineData();

        setVisible(true);
    }

    private void loadDetermineData() {
        tableModel.setRowCount(0); // Clear table first

        String connectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=Carproject;encrypt=true;trustServerCertificate=true;";
        String user = "SANDII";
        String password = "sandy321";

        try (Connection conn = DriverManager.getConnection(connectionUrl, user, password);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM DETERMINE")) {

            while (rs.next()) {
                Object[] row = {
                        rs.getInt("PAYMENT_ID"),
                        rs.getString("INVESTIGATOR_ID")
                };
                tableModel.addRow(row);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to load determine records.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(DetermineForm::new);
    }
}
